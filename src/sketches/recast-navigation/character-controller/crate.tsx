/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'
import { GLTF } from 'three-stdlib'
import crateGltfUrl from './crate.glb?url'

type GLTFResult = GLTF & {
    nodes: {
        Mesh_crateStrong: THREE.Mesh
        Mesh_crateStrong_1: THREE.Mesh
        Mesh_crateStrong_2: THREE.Mesh
    }
    materials: {
        metal: THREE.MeshStandardMaterial
        woodDark: THREE.MeshStandardMaterial
        wood: THREE.MeshStandardMaterial
    }
}

export const Crate = (props: JSX.IntrinsicElements['group']) => {
    const { nodes, materials } = useGLTF(crateGltfUrl) as GLTFResult
    return (
        <group {...props} dispose={null}>
            <mesh castShadow receiveShadow geometry={nodes.Mesh_crateStrong.geometry} material={materials.metal} />
            <mesh castShadow receiveShadow geometry={nodes.Mesh_crateStrong_1.geometry} material={materials.woodDark} />
            <mesh castShadow receiveShadow geometry={nodes.Mesh_crateStrong_2.geometry} material={materials.wood} />
        </group>
    )
}

useGLTF.preload(crateGltfUrl)
